// Code generated by protoc-gen-go. DO NOT EDIT.
// source: search.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/empty"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PaymentType int32

const (
	PaymentType_MERCHANT      PaymentType = 0
	PaymentType_DIRECT        PaymentType = 1
	PaymentType_CARD_BOOKING  PaymentType = 2
	PaymentType_CARD_CHECK_IN PaymentType = 3
)

var PaymentType_name = map[int32]string{
	0: "MERCHANT",
	1: "DIRECT",
	2: "CARD_BOOKING",
	3: "CARD_CHECK_IN",
}

var PaymentType_value = map[string]int32{
	"MERCHANT":      0,
	"DIRECT":        1,
	"CARD_BOOKING":  2,
	"CARD_CHECK_IN": 3,
}

func (x PaymentType) String() string {
	return proto.EnumName(PaymentType_name, int32(x))
}

func (PaymentType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{0}
}

type StatusType int32

const (
	StatusType_OK StatusType = 0
	StatusType_RQ StatusType = 1
)

var StatusType_name = map[int32]string{
	0: "OK",
	1: "RQ",
}

var StatusType_value = map[string]int32{
	"OK": 0,
	"RQ": 1,
}

func (x StatusType) String() string {
	return proto.EnumName(StatusType_name, int32(x))
}

func (StatusType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{1}
}

type RateRuleType int32

const (
	RateRuleType_PACKAGE           RateRuleType = 0
	RateRuleType_OLDER55           RateRuleType = 1
	RateRuleType_OLDER60           RateRuleType = 2
	RateRuleType_OLDER65           RateRuleType = 3
	RateRuleType_CANARY_RESIDENT   RateRuleType = 4
	RateRuleType_BALEARIC_RESIDENT RateRuleType = 5
	RateRuleType_LARGE_FAMILY      RateRuleType = 6
	RateRuleType_HONEYMOON         RateRuleType = 7
	RateRuleType_PUBLIC_SERVANT    RateRuleType = 8
	RateRuleType_UNEMPLOYED        RateRuleType = 9
	RateRuleType_NORMAL            RateRuleType = 10
	RateRuleType_NON_REFUNDABLE    RateRuleType = 11
)

var RateRuleType_name = map[int32]string{
	0:  "PACKAGE",
	1:  "OLDER55",
	2:  "OLDER60",
	3:  "OLDER65",
	4:  "CANARY_RESIDENT",
	5:  "BALEARIC_RESIDENT",
	6:  "LARGE_FAMILY",
	7:  "HONEYMOON",
	8:  "PUBLIC_SERVANT",
	9:  "UNEMPLOYED",
	10: "NORMAL",
	11: "NON_REFUNDABLE",
}

var RateRuleType_value = map[string]int32{
	"PACKAGE":           0,
	"OLDER55":           1,
	"OLDER60":           2,
	"OLDER65":           3,
	"CANARY_RESIDENT":   4,
	"BALEARIC_RESIDENT": 5,
	"LARGE_FAMILY":      6,
	"HONEYMOON":         7,
	"PUBLIC_SERVANT":    8,
	"UNEMPLOYED":        9,
	"NORMAL":            10,
	"NON_REFUNDABLE":    11,
}

func (x RateRuleType) String() string {
	return proto.EnumName(RateRuleType_name, int32(x))
}

func (RateRuleType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{2}
}

type SupplementType int32

const (
	SupplementType_SKI_PASS  SupplementType = 0
	SupplementType_LESSONS   SupplementType = 1
	SupplementType_MEALS     SupplementType = 2
	SupplementType_EQUIPMENT SupplementType = 3
	SupplementType_TICKET    SupplementType = 4
	SupplementType_TRANSFERS SupplementType = 5
	SupplementType_GALA      SupplementType = 6
	SupplementType_ACTIVITY  SupplementType = 7
)

var SupplementType_name = map[int32]string{
	0: "SKI_PASS",
	1: "LESSONS",
	2: "MEALS",
	3: "EQUIPMENT",
	4: "TICKET",
	5: "TRANSFERS",
	6: "GALA",
	7: "ACTIVITY",
}

var SupplementType_value = map[string]int32{
	"SKI_PASS":  0,
	"LESSONS":   1,
	"MEALS":     2,
	"EQUIPMENT": 3,
	"TICKET":    4,
	"TRANSFERS": 5,
	"GALA":      6,
	"ACTIVITY":  7,
}

func (x SupplementType) String() string {
	return proto.EnumName(SupplementType_name, int32(x))
}

func (SupplementType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{3}
}

type ChargeType int32

const (
	ChargeType_INCLUDE ChargeType = 0
	ChargeType_EXCLUDE ChargeType = 1
)

var ChargeType_name = map[int32]string{
	0: "INCLUDE",
	1: "EXCLUDE",
}

var ChargeType_value = map[string]int32{
	"INCLUDE": 0,
	"EXCLUDE": 1,
}

func (x ChargeType) String() string {
	return proto.EnumName(ChargeType_name, int32(x))
}

func (ChargeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{4}
}

type DurationType int32

const (
	DurationType_RANGE DurationType = 0
	DurationType_OPEN  DurationType = 1
)

var DurationType_name = map[int32]string{
	0: "RANGE",
	1: "OPEN",
}

var DurationType_value = map[string]int32{
	"RANGE": 0,
	"OPEN":  1,
}

func (x DurationType) String() string {
	return proto.EnumName(DurationType_name, int32(x))
}

func (DurationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{5}
}

type UnitTimeType int32

const (
	UnitTimeType_DAY  UnitTimeType = 0
	UnitTimeType_HOUR UnitTimeType = 1
)

var UnitTimeType_name = map[int32]string{
	0: "DAY",
	1: "HOUR",
}

var UnitTimeType_value = map[string]int32{
	"DAY":  0,
	"HOUR": 1,
}

func (x UnitTimeType) String() string {
	return proto.EnumName(UnitTimeType_name, int32(x))
}

func (UnitTimeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{6}
}

type CancelPenaltyType int32

const (
	CancelPenaltyType_NIGHTS  CancelPenaltyType = 0
	CancelPenaltyType_PERCENT CancelPenaltyType = 1
	CancelPenaltyType_IMPORT  CancelPenaltyType = 2
)

var CancelPenaltyType_name = map[int32]string{
	0: "NIGHTS",
	1: "PERCENT",
	2: "IMPORT",
}

var CancelPenaltyType_value = map[string]int32{
	"NIGHTS":  0,
	"PERCENT": 1,
	"IMPORT":  2,
}

func (x CancelPenaltyType) String() string {
	return proto.EnumName(CancelPenaltyType_name, int32(x))
}

func (CancelPenaltyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{7}
}

type Rule_MarkupRuleType int32

const (
	Rule_PERCENT Rule_MarkupRuleType = 0
	Rule_IMPORT  Rule_MarkupRuleType = 1
)

var Rule_MarkupRuleType_name = map[int32]string{
	0: "PERCENT",
	1: "IMPORT",
}

var Rule_MarkupRuleType_value = map[string]int32{
	"PERCENT": 0,
	"IMPORT":  1,
}

func (x Rule_MarkupRuleType) String() string {
	return proto.EnumName(Rule_MarkupRuleType_name, int32(x))
}

func (Rule_MarkupRuleType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{11, 0}
}

type SearchReply struct {
	Options              []*Option `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SearchReply) Reset()         { *m = SearchReply{} }
func (m *SearchReply) String() string { return proto.CompactTextString(m) }
func (*SearchReply) ProtoMessage()    {}
func (*SearchReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{0}
}

func (m *SearchReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchReply.Unmarshal(m, b)
}
func (m *SearchReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchReply.Marshal(b, m, deterministic)
}
func (m *SearchReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchReply.Merge(m, src)
}
func (m *SearchReply) XXX_Size() int {
	return xxx_messageInfo_SearchReply.Size(m)
}
func (m *SearchReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchReply.DiscardUnknown(m)
}

var xxx_messageInfo_SearchReply proto.InternalMessageInfo

func (m *SearchReply) GetOptions() []*Option {
	if m != nil {
		return m.Options
	}
	return nil
}

type Option struct {
	SupplierCode         string         `protobuf:"bytes,1,opt,name=supplier_code,json=supplierCode,proto3" json:"supplier_code,omitempty"`
	AccessCode           string         `protobuf:"bytes,2,opt,name=access_code,json=accessCode,proto3" json:"access_code,omitempty"`
	Market               string         `protobuf:"bytes,3,opt,name=market,proto3" json:"market,omitempty"`
	HotelCode            string         `protobuf:"bytes,4,opt,name=hotel_code,json=hotelCode,proto3" json:"hotel_code,omitempty"`
	HotelCodeSupplier    string         `protobuf:"bytes,5,opt,name=hotel_code_supplier,json=hotelCodeSupplier,proto3" json:"hotel_code_supplier,omitempty"`
	HotelName            string         `protobuf:"bytes,6,opt,name=hotel_name,json=hotelName,proto3" json:"hotel_name,omitempty"`
	BoardCode            string         `protobuf:"bytes,7,opt,name=board_code,json=boardCode,proto3" json:"board_code,omitempty"`
	BoardCodeSupplier    string         `protobuf:"bytes,8,opt,name=board_code_supplier,json=boardCodeSupplier,proto3" json:"board_code_supplier,omitempty"`
	PaymentType          PaymentType    `protobuf:"varint,9,opt,name=paymentType,proto3,enum=search.PaymentType" json:"paymentType,omitempty"`
	StatusType           StatusType     `protobuf:"varint,10,opt,name=statusType,proto3,enum=search.StatusType" json:"statusType,omitempty"`
	Occupancies          []*Occupancy   `protobuf:"bytes,11,rep,name=occupancies,proto3" json:"occupancies,omitempty"`
	Rooms                []*Room        `protobuf:"bytes,12,rep,name=rooms,proto3" json:"rooms,omitempty"`
	Price                *Price         `protobuf:"bytes,13,opt,name=price,proto3" json:"price,omitempty"`
	Supplements          []*Supplement  `protobuf:"bytes,14,rep,name=supplements,proto3" json:"supplements,omitempty"`
	Surcharges           []*Surcharge   `protobuf:"bytes,15,rep,name=surcharges,proto3" json:"surcharges,omitempty"`
	RateRules            []RateRuleType `protobuf:"varint,16,rep,packed,name=rate_rules,json=rateRules,proto3,enum=search.RateRuleType" json:"rate_rules,omitempty"`
	CancelPolicy         *CancelPolicy  `protobuf:"bytes,17,opt,name=cancel_policy,json=cancelPolicy,proto3" json:"cancel_policy,omitempty"`
	Remarks              string         `protobuf:"bytes,18,opt,name=remarks,proto3" json:"remarks,omitempty"`
	AddOns               *AddOns        `protobuf:"bytes,19,opt,name=add_ons,json=addOns,proto3" json:"add_ons,omitempty"`
	Token                string         `protobuf:"bytes,20,opt,name=token,proto3" json:"token,omitempty"`
	Id                   string         `protobuf:"bytes,21,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Option) Reset()         { *m = Option{} }
func (m *Option) String() string { return proto.CompactTextString(m) }
func (*Option) ProtoMessage()    {}
func (*Option) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{1}
}

func (m *Option) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Option.Unmarshal(m, b)
}
func (m *Option) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Option.Marshal(b, m, deterministic)
}
func (m *Option) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Option.Merge(m, src)
}
func (m *Option) XXX_Size() int {
	return xxx_messageInfo_Option.Size(m)
}
func (m *Option) XXX_DiscardUnknown() {
	xxx_messageInfo_Option.DiscardUnknown(m)
}

var xxx_messageInfo_Option proto.InternalMessageInfo

func (m *Option) GetSupplierCode() string {
	if m != nil {
		return m.SupplierCode
	}
	return ""
}

func (m *Option) GetAccessCode() string {
	if m != nil {
		return m.AccessCode
	}
	return ""
}

func (m *Option) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

func (m *Option) GetHotelCode() string {
	if m != nil {
		return m.HotelCode
	}
	return ""
}

func (m *Option) GetHotelCodeSupplier() string {
	if m != nil {
		return m.HotelCodeSupplier
	}
	return ""
}

func (m *Option) GetHotelName() string {
	if m != nil {
		return m.HotelName
	}
	return ""
}

func (m *Option) GetBoardCode() string {
	if m != nil {
		return m.BoardCode
	}
	return ""
}

func (m *Option) GetBoardCodeSupplier() string {
	if m != nil {
		return m.BoardCodeSupplier
	}
	return ""
}

func (m *Option) GetPaymentType() PaymentType {
	if m != nil {
		return m.PaymentType
	}
	return PaymentType_MERCHANT
}

func (m *Option) GetStatusType() StatusType {
	if m != nil {
		return m.StatusType
	}
	return StatusType_OK
}

func (m *Option) GetOccupancies() []*Occupancy {
	if m != nil {
		return m.Occupancies
	}
	return nil
}

func (m *Option) GetRooms() []*Room {
	if m != nil {
		return m.Rooms
	}
	return nil
}

func (m *Option) GetPrice() *Price {
	if m != nil {
		return m.Price
	}
	return nil
}

func (m *Option) GetSupplements() []*Supplement {
	if m != nil {
		return m.Supplements
	}
	return nil
}

func (m *Option) GetSurcharges() []*Surcharge {
	if m != nil {
		return m.Surcharges
	}
	return nil
}

func (m *Option) GetRateRules() []RateRuleType {
	if m != nil {
		return m.RateRules
	}
	return nil
}

func (m *Option) GetCancelPolicy() *CancelPolicy {
	if m != nil {
		return m.CancelPolicy
	}
	return nil
}

func (m *Option) GetRemarks() string {
	if m != nil {
		return m.Remarks
	}
	return ""
}

func (m *Option) GetAddOns() *AddOns {
	if m != nil {
		return m.AddOns
	}
	return nil
}

func (m *Option) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Option) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Occupancy struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Paxes                []*Pax   `protobuf:"bytes,2,rep,name=paxes,proto3" json:"paxes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Occupancy) Reset()         { *m = Occupancy{} }
func (m *Occupancy) String() string { return proto.CompactTextString(m) }
func (*Occupancy) ProtoMessage()    {}
func (*Occupancy) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{2}
}

func (m *Occupancy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Occupancy.Unmarshal(m, b)
}
func (m *Occupancy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Occupancy.Marshal(b, m, deterministic)
}
func (m *Occupancy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Occupancy.Merge(m, src)
}
func (m *Occupancy) XXX_Size() int {
	return xxx_messageInfo_Occupancy.Size(m)
}
func (m *Occupancy) XXX_DiscardUnknown() {
	xxx_messageInfo_Occupancy.DiscardUnknown(m)
}

var xxx_messageInfo_Occupancy proto.InternalMessageInfo

func (m *Occupancy) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Occupancy) GetPaxes() []*Pax {
	if m != nil {
		return m.Paxes
	}
	return nil
}

type Pax struct {
	Age                  uint32   `protobuf:"varint,1,opt,name=age,proto3" json:"age,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pax) Reset()         { *m = Pax{} }
func (m *Pax) String() string { return proto.CompactTextString(m) }
func (*Pax) ProtoMessage()    {}
func (*Pax) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{3}
}

func (m *Pax) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pax.Unmarshal(m, b)
}
func (m *Pax) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pax.Marshal(b, m, deterministic)
}
func (m *Pax) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pax.Merge(m, src)
}
func (m *Pax) XXX_Size() int {
	return xxx_messageInfo_Pax.Size(m)
}
func (m *Pax) XXX_DiscardUnknown() {
	xxx_messageInfo_Pax.DiscardUnknown(m)
}

var xxx_messageInfo_Pax proto.InternalMessageInfo

func (m *Pax) GetAge() uint32 {
	if m != nil {
		return m.Age
	}
	return 0
}

type Room struct {
	OccupancyRefId       int32        `protobuf:"varint,1,opt,name=occupancy_ref_id,json=occupancyRefId,proto3" json:"occupancy_ref_id,omitempty"`
	Code                 string       `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Description          string       `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Refundable           bool         `protobuf:"varint,4,opt,name=refundable,proto3" json:"refundable,omitempty"`
	Units                int64        `protobuf:"varint,5,opt,name=units,proto3" json:"units,omitempty"`
	RoomPrice            *RoomPrice   `protobuf:"bytes,6,opt,name=room_price,json=roomPrice,proto3" json:"room_price,omitempty"`
	Beds                 []*Bed       `protobuf:"bytes,7,rep,name=beds,proto3" json:"beds,omitempty"`
	RatePlans            []*RatePlan  `protobuf:"bytes,8,rep,name=rate_plans,json=ratePlans,proto3" json:"rate_plans,omitempty"`
	Promotions           []*Promotion `protobuf:"bytes,9,rep,name=promotions,proto3" json:"promotions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Room) Reset()         { *m = Room{} }
func (m *Room) String() string { return proto.CompactTextString(m) }
func (*Room) ProtoMessage()    {}
func (*Room) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{4}
}

func (m *Room) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Room.Unmarshal(m, b)
}
func (m *Room) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Room.Marshal(b, m, deterministic)
}
func (m *Room) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Room.Merge(m, src)
}
func (m *Room) XXX_Size() int {
	return xxx_messageInfo_Room.Size(m)
}
func (m *Room) XXX_DiscardUnknown() {
	xxx_messageInfo_Room.DiscardUnknown(m)
}

var xxx_messageInfo_Room proto.InternalMessageInfo

func (m *Room) GetOccupancyRefId() int32 {
	if m != nil {
		return m.OccupancyRefId
	}
	return 0
}

func (m *Room) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Room) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Room) GetRefundable() bool {
	if m != nil {
		return m.Refundable
	}
	return false
}

func (m *Room) GetUnits() int64 {
	if m != nil {
		return m.Units
	}
	return 0
}

func (m *Room) GetRoomPrice() *RoomPrice {
	if m != nil {
		return m.RoomPrice
	}
	return nil
}

func (m *Room) GetBeds() []*Bed {
	if m != nil {
		return m.Beds
	}
	return nil
}

func (m *Room) GetRatePlans() []*RatePlan {
	if m != nil {
		return m.RatePlans
	}
	return nil
}

func (m *Room) GetPromotions() []*Promotion {
	if m != nil {
		return m.Promotions
	}
	return nil
}

type Bed struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Count                int64    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Shared               bool     `protobuf:"varint,4,opt,name=shared,proto3" json:"shared,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bed) Reset()         { *m = Bed{} }
func (m *Bed) String() string { return proto.CompactTextString(m) }
func (*Bed) ProtoMessage()    {}
func (*Bed) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{5}
}

func (m *Bed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bed.Unmarshal(m, b)
}
func (m *Bed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bed.Marshal(b, m, deterministic)
}
func (m *Bed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bed.Merge(m, src)
}
func (m *Bed) XXX_Size() int {
	return xxx_messageInfo_Bed.Size(m)
}
func (m *Bed) XXX_DiscardUnknown() {
	xxx_messageInfo_Bed.DiscardUnknown(m)
}

var xxx_messageInfo_Bed proto.InternalMessageInfo

func (m *Bed) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Bed) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Bed) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *Bed) GetShared() bool {
	if m != nil {
		return m.Shared
	}
	return false
}

type RatePlan struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	EffectiveDate        string   `protobuf:"bytes,3,opt,name=effective_date,json=effectiveDate,proto3" json:"effective_date,omitempty"`
	ExpireDate           string   `protobuf:"bytes,4,opt,name=expire_date,json=expireDate,proto3" json:"expire_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RatePlan) Reset()         { *m = RatePlan{} }
func (m *RatePlan) String() string { return proto.CompactTextString(m) }
func (*RatePlan) ProtoMessage()    {}
func (*RatePlan) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{6}
}

func (m *RatePlan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RatePlan.Unmarshal(m, b)
}
func (m *RatePlan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RatePlan.Marshal(b, m, deterministic)
}
func (m *RatePlan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RatePlan.Merge(m, src)
}
func (m *RatePlan) XXX_Size() int {
	return xxx_messageInfo_RatePlan.Size(m)
}
func (m *RatePlan) XXX_DiscardUnknown() {
	xxx_messageInfo_RatePlan.DiscardUnknown(m)
}

var xxx_messageInfo_RatePlan proto.InternalMessageInfo

func (m *RatePlan) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *RatePlan) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RatePlan) GetEffectiveDate() string {
	if m != nil {
		return m.EffectiveDate
	}
	return ""
}

func (m *RatePlan) GetExpireDate() string {
	if m != nil {
		return m.ExpireDate
	}
	return ""
}

type Promotion struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	EffectiveDate        string   `protobuf:"bytes,3,opt,name=effective_date,json=effectiveDate,proto3" json:"effective_date,omitempty"`
	ExpireDate           string   `protobuf:"bytes,4,opt,name=expire_date,json=expireDate,proto3" json:"expire_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Promotion) Reset()         { *m = Promotion{} }
func (m *Promotion) String() string { return proto.CompactTextString(m) }
func (*Promotion) ProtoMessage()    {}
func (*Promotion) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{7}
}

func (m *Promotion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Promotion.Unmarshal(m, b)
}
func (m *Promotion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Promotion.Marshal(b, m, deterministic)
}
func (m *Promotion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Promotion.Merge(m, src)
}
func (m *Promotion) XXX_Size() int {
	return xxx_messageInfo_Promotion.Size(m)
}
func (m *Promotion) XXX_DiscardUnknown() {
	xxx_messageInfo_Promotion.DiscardUnknown(m)
}

var xxx_messageInfo_Promotion proto.InternalMessageInfo

func (m *Promotion) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Promotion) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Promotion) GetEffectiveDate() string {
	if m != nil {
		return m.EffectiveDate
	}
	return ""
}

func (m *Promotion) GetExpireDate() string {
	if m != nil {
		return m.ExpireDate
	}
	return ""
}

type Price struct {
	Currency             string    `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Binding              bool      `protobuf:"varint,2,opt,name=binding,proto3" json:"binding,omitempty"`
	Net                  float64   `protobuf:"fixed64,3,opt,name=net,proto3" json:"net,omitempty"`
	Gross                float64   `protobuf:"fixed64,4,opt,name=gross,proto3" json:"gross,omitempty"`
	Exchange             *Exchange `protobuf:"bytes,5,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Markups              []*Markup `protobuf:"bytes,6,rep,name=markups,proto3" json:"markups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Price) Reset()         { *m = Price{} }
func (m *Price) String() string { return proto.CompactTextString(m) }
func (*Price) ProtoMessage()    {}
func (*Price) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{8}
}

func (m *Price) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Price.Unmarshal(m, b)
}
func (m *Price) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Price.Marshal(b, m, deterministic)
}
func (m *Price) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Price.Merge(m, src)
}
func (m *Price) XXX_Size() int {
	return xxx_messageInfo_Price.Size(m)
}
func (m *Price) XXX_DiscardUnknown() {
	xxx_messageInfo_Price.DiscardUnknown(m)
}

var xxx_messageInfo_Price proto.InternalMessageInfo

func (m *Price) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Price) GetBinding() bool {
	if m != nil {
		return m.Binding
	}
	return false
}

func (m *Price) GetNet() float64 {
	if m != nil {
		return m.Net
	}
	return 0
}

func (m *Price) GetGross() float64 {
	if m != nil {
		return m.Gross
	}
	return 0
}

func (m *Price) GetExchange() *Exchange {
	if m != nil {
		return m.Exchange
	}
	return nil
}

func (m *Price) GetMarkups() []*Markup {
	if m != nil {
		return m.Markups
	}
	return nil
}

type Exchange struct {
	Currency             string   `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Rate                 float64  `protobuf:"fixed64,2,opt,name=rate,proto3" json:"rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Exchange) Reset()         { *m = Exchange{} }
func (m *Exchange) String() string { return proto.CompactTextString(m) }
func (*Exchange) ProtoMessage()    {}
func (*Exchange) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{9}
}

func (m *Exchange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Exchange.Unmarshal(m, b)
}
func (m *Exchange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Exchange.Marshal(b, m, deterministic)
}
func (m *Exchange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Exchange.Merge(m, src)
}
func (m *Exchange) XXX_Size() int {
	return xxx_messageInfo_Exchange.Size(m)
}
func (m *Exchange) XXX_DiscardUnknown() {
	xxx_messageInfo_Exchange.DiscardUnknown(m)
}

var xxx_messageInfo_Exchange proto.InternalMessageInfo

func (m *Exchange) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Exchange) GetRate() float64 {
	if m != nil {
		return m.Rate
	}
	return 0
}

type Markup struct {
	Currency             string    `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Binding              bool      `protobuf:"varint,2,opt,name=binding,proto3" json:"binding,omitempty"`
	Net                  float64   `protobuf:"fixed64,3,opt,name=net,proto3" json:"net,omitempty"`
	Gross                float64   `protobuf:"fixed64,4,opt,name=gross,proto3" json:"gross,omitempty"`
	Exchange             *Exchange `protobuf:"bytes,5,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Channel              string    `protobuf:"bytes,6,opt,name=channel,proto3" json:"channel,omitempty"`
	Rules                []*Rule   `protobuf:"bytes,7,rep,name=rules,proto3" json:"rules,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Markup) Reset()         { *m = Markup{} }
func (m *Markup) String() string { return proto.CompactTextString(m) }
func (*Markup) ProtoMessage()    {}
func (*Markup) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{10}
}

func (m *Markup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Markup.Unmarshal(m, b)
}
func (m *Markup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Markup.Marshal(b, m, deterministic)
}
func (m *Markup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Markup.Merge(m, src)
}
func (m *Markup) XXX_Size() int {
	return xxx_messageInfo_Markup.Size(m)
}
func (m *Markup) XXX_DiscardUnknown() {
	xxx_messageInfo_Markup.DiscardUnknown(m)
}

var xxx_messageInfo_Markup proto.InternalMessageInfo

func (m *Markup) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Markup) GetBinding() bool {
	if m != nil {
		return m.Binding
	}
	return false
}

func (m *Markup) GetNet() float64 {
	if m != nil {
		return m.Net
	}
	return 0
}

func (m *Markup) GetGross() float64 {
	if m != nil {
		return m.Gross
	}
	return 0
}

func (m *Markup) GetExchange() *Exchange {
	if m != nil {
		return m.Exchange
	}
	return nil
}

func (m *Markup) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *Markup) GetRules() []*Rule {
	if m != nil {
		return m.Rules
	}
	return nil
}

type Rule struct {
	Id                   string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type                 Rule_MarkupRuleType `protobuf:"varint,3,opt,name=type,proto3,enum=search.Rule_MarkupRuleType" json:"type,omitempty"`
	Value                float64             `protobuf:"fixed64,4,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Rule) Reset()         { *m = Rule{} }
func (m *Rule) String() string { return proto.CompactTextString(m) }
func (*Rule) ProtoMessage()    {}
func (*Rule) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{11}
}

func (m *Rule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rule.Unmarshal(m, b)
}
func (m *Rule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rule.Marshal(b, m, deterministic)
}
func (m *Rule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rule.Merge(m, src)
}
func (m *Rule) XXX_Size() int {
	return xxx_messageInfo_Rule.Size(m)
}
func (m *Rule) XXX_DiscardUnknown() {
	xxx_messageInfo_Rule.DiscardUnknown(m)
}

var xxx_messageInfo_Rule proto.InternalMessageInfo

func (m *Rule) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Rule) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Rule) GetType() Rule_MarkupRuleType {
	if m != nil {
		return m.Type
	}
	return Rule_PERCENT
}

func (m *Rule) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type RoomPrice struct {
	Price                *Price       `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
	Breakdowns           []*Breakdown `protobuf:"bytes,2,rep,name=breakdowns,proto3" json:"breakdowns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RoomPrice) Reset()         { *m = RoomPrice{} }
func (m *RoomPrice) String() string { return proto.CompactTextString(m) }
func (*RoomPrice) ProtoMessage()    {}
func (*RoomPrice) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{12}
}

func (m *RoomPrice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomPrice.Unmarshal(m, b)
}
func (m *RoomPrice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomPrice.Marshal(b, m, deterministic)
}
func (m *RoomPrice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomPrice.Merge(m, src)
}
func (m *RoomPrice) XXX_Size() int {
	return xxx_messageInfo_RoomPrice.Size(m)
}
func (m *RoomPrice) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomPrice.DiscardUnknown(m)
}

var xxx_messageInfo_RoomPrice proto.InternalMessageInfo

func (m *RoomPrice) GetPrice() *Price {
	if m != nil {
		return m.Price
	}
	return nil
}

func (m *RoomPrice) GetBreakdowns() []*Breakdown {
	if m != nil {
		return m.Breakdowns
	}
	return nil
}

type Breakdown struct {
	EffectiveDate        string   `protobuf:"bytes,1,opt,name=effective_date,json=effectiveDate,proto3" json:"effective_date,omitempty"`
	ExpireDate           string   `protobuf:"bytes,2,opt,name=expire_date,json=expireDate,proto3" json:"expire_date,omitempty"`
	Price                *Price   `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Breakdown) Reset()         { *m = Breakdown{} }
func (m *Breakdown) String() string { return proto.CompactTextString(m) }
func (*Breakdown) ProtoMessage()    {}
func (*Breakdown) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{13}
}

func (m *Breakdown) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Breakdown.Unmarshal(m, b)
}
func (m *Breakdown) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Breakdown.Marshal(b, m, deterministic)
}
func (m *Breakdown) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Breakdown.Merge(m, src)
}
func (m *Breakdown) XXX_Size() int {
	return xxx_messageInfo_Breakdown.Size(m)
}
func (m *Breakdown) XXX_DiscardUnknown() {
	xxx_messageInfo_Breakdown.DiscardUnknown(m)
}

var xxx_messageInfo_Breakdown proto.InternalMessageInfo

func (m *Breakdown) GetEffectiveDate() string {
	if m != nil {
		return m.EffectiveDate
	}
	return ""
}

func (m *Breakdown) GetExpireDate() string {
	if m != nil {
		return m.ExpireDate
	}
	return ""
}

func (m *Breakdown) GetPrice() *Price {
	if m != nil {
		return m.Price
	}
	return nil
}

type Supplement struct {
	Code                 string         `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name                 string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string         `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ChargeType           ChargeType     `protobuf:"varint,4,opt,name=charge_type,json=chargeType,proto3,enum=search.ChargeType" json:"charge_type,omitempty"`
	Mandatory            bool           `protobuf:"varint,5,opt,name=mandatory,proto3" json:"mandatory,omitempty"`
	DurationType         DurationType   `protobuf:"varint,6,opt,name=duration_type,json=durationType,proto3,enum=search.DurationType" json:"duration_type,omitempty"`
	Quantity             int64          `protobuf:"varint,7,opt,name=quantity,proto3" json:"quantity,omitempty"`
	UnitTimeType         UnitTimeType   `protobuf:"varint,8,opt,name=unit_time_type,json=unitTimeType,proto3,enum=search.UnitTimeType" json:"unit_time_type,omitempty"`
	EffectiveDate        string         `protobuf:"bytes,9,opt,name=effective_date,json=effectiveDate,proto3" json:"effective_date,omitempty"`
	ExpireDate           string         `protobuf:"bytes,10,opt,name=expire_date,json=expireDate,proto3" json:"expire_date,omitempty"`
	Resort               *Resort        `protobuf:"bytes,11,opt,name=resort,proto3" json:"resort,omitempty"`
	Price                *Price         `protobuf:"bytes,12,opt,name=price,proto3" json:"price,omitempty"`
	SupplementType       SupplementType `protobuf:"varint,13,opt,name=supplement_type,json=supplementType,proto3,enum=search.SupplementType" json:"supplement_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Supplement) Reset()         { *m = Supplement{} }
func (m *Supplement) String() string { return proto.CompactTextString(m) }
func (*Supplement) ProtoMessage()    {}
func (*Supplement) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{14}
}

func (m *Supplement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Supplement.Unmarshal(m, b)
}
func (m *Supplement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Supplement.Marshal(b, m, deterministic)
}
func (m *Supplement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Supplement.Merge(m, src)
}
func (m *Supplement) XXX_Size() int {
	return xxx_messageInfo_Supplement.Size(m)
}
func (m *Supplement) XXX_DiscardUnknown() {
	xxx_messageInfo_Supplement.DiscardUnknown(m)
}

var xxx_messageInfo_Supplement proto.InternalMessageInfo

func (m *Supplement) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Supplement) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Supplement) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Supplement) GetChargeType() ChargeType {
	if m != nil {
		return m.ChargeType
	}
	return ChargeType_INCLUDE
}

func (m *Supplement) GetMandatory() bool {
	if m != nil {
		return m.Mandatory
	}
	return false
}

func (m *Supplement) GetDurationType() DurationType {
	if m != nil {
		return m.DurationType
	}
	return DurationType_RANGE
}

func (m *Supplement) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *Supplement) GetUnitTimeType() UnitTimeType {
	if m != nil {
		return m.UnitTimeType
	}
	return UnitTimeType_DAY
}

func (m *Supplement) GetEffectiveDate() string {
	if m != nil {
		return m.EffectiveDate
	}
	return ""
}

func (m *Supplement) GetExpireDate() string {
	if m != nil {
		return m.ExpireDate
	}
	return ""
}

func (m *Supplement) GetResort() *Resort {
	if m != nil {
		return m.Resort
	}
	return nil
}

func (m *Supplement) GetPrice() *Price {
	if m != nil {
		return m.Price
	}
	return nil
}

func (m *Supplement) GetSupplementType() SupplementType {
	if m != nil {
		return m.SupplementType
	}
	return SupplementType_SKI_PASS
}

type Resort struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Resort) Reset()         { *m = Resort{} }
func (m *Resort) String() string { return proto.CompactTextString(m) }
func (*Resort) ProtoMessage()    {}
func (*Resort) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{15}
}

func (m *Resort) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resort.Unmarshal(m, b)
}
func (m *Resort) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resort.Marshal(b, m, deterministic)
}
func (m *Resort) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resort.Merge(m, src)
}
func (m *Resort) XXX_Size() int {
	return xxx_messageInfo_Resort.Size(m)
}
func (m *Resort) XXX_DiscardUnknown() {
	xxx_messageInfo_Resort.DiscardUnknown(m)
}

var xxx_messageInfo_Resort proto.InternalMessageInfo

func (m *Resort) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Resort) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Resort) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Surcharge struct {
	ChargeType           ChargeType `protobuf:"varint,1,opt,name=charge_type,json=chargeType,proto3,enum=search.ChargeType" json:"charge_type,omitempty"`
	Mandatory            bool       `protobuf:"varint,2,opt,name=mandatory,proto3" json:"mandatory,omitempty"`
	Price                *Price     `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	Description          string     `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Surcharge) Reset()         { *m = Surcharge{} }
func (m *Surcharge) String() string { return proto.CompactTextString(m) }
func (*Surcharge) ProtoMessage()    {}
func (*Surcharge) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{16}
}

func (m *Surcharge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Surcharge.Unmarshal(m, b)
}
func (m *Surcharge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Surcharge.Marshal(b, m, deterministic)
}
func (m *Surcharge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Surcharge.Merge(m, src)
}
func (m *Surcharge) XXX_Size() int {
	return xxx_messageInfo_Surcharge.Size(m)
}
func (m *Surcharge) XXX_DiscardUnknown() {
	xxx_messageInfo_Surcharge.DiscardUnknown(m)
}

var xxx_messageInfo_Surcharge proto.InternalMessageInfo

func (m *Surcharge) GetChargeType() ChargeType {
	if m != nil {
		return m.ChargeType
	}
	return ChargeType_INCLUDE
}

func (m *Surcharge) GetMandatory() bool {
	if m != nil {
		return m.Mandatory
	}
	return false
}

func (m *Surcharge) GetPrice() *Price {
	if m != nil {
		return m.Price
	}
	return nil
}

func (m *Surcharge) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type CancelPolicy struct {
	Refundable           bool             `protobuf:"varint,1,opt,name=refundable,proto3" json:"refundable,omitempty"`
	CancelPenalties      []*CancelPenalty `protobuf:"bytes,2,rep,name=cancel_penalties,json=cancelPenalties,proto3" json:"cancel_penalties,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CancelPolicy) Reset()         { *m = CancelPolicy{} }
func (m *CancelPolicy) String() string { return proto.CompactTextString(m) }
func (*CancelPolicy) ProtoMessage()    {}
func (*CancelPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{17}
}

func (m *CancelPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelPolicy.Unmarshal(m, b)
}
func (m *CancelPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelPolicy.Marshal(b, m, deterministic)
}
func (m *CancelPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelPolicy.Merge(m, src)
}
func (m *CancelPolicy) XXX_Size() int {
	return xxx_messageInfo_CancelPolicy.Size(m)
}
func (m *CancelPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_CancelPolicy proto.InternalMessageInfo

func (m *CancelPolicy) GetRefundable() bool {
	if m != nil {
		return m.Refundable
	}
	return false
}

func (m *CancelPolicy) GetCancelPenalties() []*CancelPenalty {
	if m != nil {
		return m.CancelPenalties
	}
	return nil
}

type CancelPenalty struct {
	HoursBefore          int64             `protobuf:"varint,1,opt,name=hours_before,json=hoursBefore,proto3" json:"hours_before,omitempty"`
	PenaltyType          CancelPenaltyType `protobuf:"varint,2,opt,name=penalty_type,json=penaltyType,proto3,enum=search.CancelPenaltyType" json:"penalty_type,omitempty"`
	Currency             string            `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	Value                float64           `protobuf:"fixed64,4,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CancelPenalty) Reset()         { *m = CancelPenalty{} }
func (m *CancelPenalty) String() string { return proto.CompactTextString(m) }
func (*CancelPenalty) ProtoMessage()    {}
func (*CancelPenalty) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{18}
}

func (m *CancelPenalty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelPenalty.Unmarshal(m, b)
}
func (m *CancelPenalty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelPenalty.Marshal(b, m, deterministic)
}
func (m *CancelPenalty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelPenalty.Merge(m, src)
}
func (m *CancelPenalty) XXX_Size() int {
	return xxx_messageInfo_CancelPenalty.Size(m)
}
func (m *CancelPenalty) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelPenalty.DiscardUnknown(m)
}

var xxx_messageInfo_CancelPenalty proto.InternalMessageInfo

func (m *CancelPenalty) GetHoursBefore() int64 {
	if m != nil {
		return m.HoursBefore
	}
	return 0
}

func (m *CancelPenalty) GetPenaltyType() CancelPenaltyType {
	if m != nil {
		return m.PenaltyType
	}
	return CancelPenaltyType_NIGHTS
}

func (m *CancelPenalty) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *CancelPenalty) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type AddOns struct {
	Distribution         []*AddOn `protobuf:"bytes,1,rep,name=distribution,proto3" json:"distribution,omitempty"`
	Distribute           string   `protobuf:"bytes,2,opt,name=distribute,proto3" json:"distribute,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddOns) Reset()         { *m = AddOns{} }
func (m *AddOns) String() string { return proto.CompactTextString(m) }
func (*AddOns) ProtoMessage()    {}
func (*AddOns) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{19}
}

func (m *AddOns) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddOns.Unmarshal(m, b)
}
func (m *AddOns) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddOns.Marshal(b, m, deterministic)
}
func (m *AddOns) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddOns.Merge(m, src)
}
func (m *AddOns) XXX_Size() int {
	return xxx_messageInfo_AddOns.Size(m)
}
func (m *AddOns) XXX_DiscardUnknown() {
	xxx_messageInfo_AddOns.DiscardUnknown(m)
}

var xxx_messageInfo_AddOns proto.InternalMessageInfo

func (m *AddOns) GetDistribution() []*AddOn {
	if m != nil {
		return m.Distribution
	}
	return nil
}

func (m *AddOns) GetDistribute() string {
	if m != nil {
		return m.Distribute
	}
	return ""
}

type AddOn struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddOn) Reset()         { *m = AddOn{} }
func (m *AddOn) String() string { return proto.CompactTextString(m) }
func (*AddOn) ProtoMessage()    {}
func (*AddOn) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{20}
}

func (m *AddOn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddOn.Unmarshal(m, b)
}
func (m *AddOn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddOn.Marshal(b, m, deterministic)
}
func (m *AddOn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddOn.Merge(m, src)
}
func (m *AddOn) XXX_Size() int {
	return xxx_messageInfo_AddOn.Size(m)
}
func (m *AddOn) XXX_DiscardUnknown() {
	xxx_messageInfo_AddOn.DiscardUnknown(m)
}

var xxx_messageInfo_AddOn proto.InternalMessageInfo

func (m *AddOn) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *AddOn) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterEnum("search.PaymentType", PaymentType_name, PaymentType_value)
	proto.RegisterEnum("search.StatusType", StatusType_name, StatusType_value)
	proto.RegisterEnum("search.RateRuleType", RateRuleType_name, RateRuleType_value)
	proto.RegisterEnum("search.SupplementType", SupplementType_name, SupplementType_value)
	proto.RegisterEnum("search.ChargeType", ChargeType_name, ChargeType_value)
	proto.RegisterEnum("search.DurationType", DurationType_name, DurationType_value)
	proto.RegisterEnum("search.UnitTimeType", UnitTimeType_name, UnitTimeType_value)
	proto.RegisterEnum("search.CancelPenaltyType", CancelPenaltyType_name, CancelPenaltyType_value)
	proto.RegisterEnum("search.Rule_MarkupRuleType", Rule_MarkupRuleType_name, Rule_MarkupRuleType_value)
	proto.RegisterType((*SearchReply)(nil), "search.SearchReply")
	proto.RegisterType((*Option)(nil), "search.Option")
	proto.RegisterType((*Occupancy)(nil), "search.Occupancy")
	proto.RegisterType((*Pax)(nil), "search.Pax")
	proto.RegisterType((*Room)(nil), "search.Room")
	proto.RegisterType((*Bed)(nil), "search.Bed")
	proto.RegisterType((*RatePlan)(nil), "search.RatePlan")
	proto.RegisterType((*Promotion)(nil), "search.Promotion")
	proto.RegisterType((*Price)(nil), "search.Price")
	proto.RegisterType((*Exchange)(nil), "search.Exchange")
	proto.RegisterType((*Markup)(nil), "search.Markup")
	proto.RegisterType((*Rule)(nil), "search.Rule")
	proto.RegisterType((*RoomPrice)(nil), "search.RoomPrice")
	proto.RegisterType((*Breakdown)(nil), "search.Breakdown")
	proto.RegisterType((*Supplement)(nil), "search.Supplement")
	proto.RegisterType((*Resort)(nil), "search.Resort")
	proto.RegisterType((*Surcharge)(nil), "search.Surcharge")
	proto.RegisterType((*CancelPolicy)(nil), "search.CancelPolicy")
	proto.RegisterType((*CancelPenalty)(nil), "search.CancelPenalty")
	proto.RegisterType((*AddOns)(nil), "search.AddOns")
	proto.RegisterType((*AddOn)(nil), "search.AddOn")
}

func init() { proto.RegisterFile("search.proto", fileDescriptor_453745cff914010e) }

var fileDescriptor_453745cff914010e = []byte{
	// 1820 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0x5b, 0x73, 0xe3, 0x48,
	0x15, 0x1e, 0xf9, 0x22, 0xdb, 0xc7, 0x97, 0x51, 0x7a, 0x32, 0x83, 0x98, 0x5d, 0xd8, 0x8c, 0xa6,
	0x58, 0x42, 0x8a, 0x4a, 0x76, 0x32, 0x0c, 0x0b, 0x5b, 0x14, 0xa0, 0xd8, 0x9a, 0xc4, 0x15, 0xc7,
	0xf6, 0xb6, 0x9d, 0x2d, 0x52, 0x3c, 0xa8, 0x64, 0xa9, 0x93, 0xa8, 0xc6, 0x96, 0x84, 0x2e, 0x4b,
	0x0c, 0xff, 0x82, 0x67, 0x9e, 0xa8, 0xe2, 0x67, 0xf0, 0x17, 0x78, 0x60, 0xfe, 0x10, 0xd5, 0xa7,
	0x75, 0xb3, 0x13, 0x86, 0xa1, 0x8a, 0xa2, 0x78, 0x72, 0x9f, 0xf3, 0x9d, 0xee, 0x73, 0xfa, 0x5c,
	0x5b, 0x86, 0x4e, 0xc4, 0xac, 0xd0, 0xbe, 0x3d, 0x0c, 0x42, 0x3f, 0xf6, 0x89, 0x2c, 0xa8, 0xe7,
	0x9f, 0xdc, 0xf8, 0xfe, 0xcd, 0x92, 0x1d, 0x21, 0x77, 0x91, 0x5c, 0x1f, 0xb1, 0x55, 0x10, 0xaf,
	0x85, 0x90, 0xf6, 0x25, 0xb4, 0x67, 0x28, 0x46, 0x59, 0xb0, 0x5c, 0x93, 0x7d, 0x68, 0xf8, 0x41,
	0xec, 0xfa, 0x5e, 0xa4, 0x4a, 0x7b, 0xd5, 0xfd, 0xf6, 0x71, 0xef, 0x30, 0x3d, 0x73, 0x82, 0x6c,
	0x9a, 0xc1, 0xda, 0xdf, 0x65, 0x90, 0x05, 0x8f, 0xbc, 0x84, 0x6e, 0x94, 0x04, 0xc1, 0xd2, 0x65,
	0xa1, 0x69, 0xfb, 0x0e, 0x53, 0xa5, 0x3d, 0x69, 0xbf, 0x45, 0x3b, 0x19, 0xb3, 0xef, 0x3b, 0x8c,
	0x7c, 0x06, 0x6d, 0xcb, 0xb6, 0x59, 0x14, 0x09, 0x91, 0x0a, 0x8a, 0x80, 0x60, 0xa1, 0xc0, 0x33,
	0x90, 0x57, 0x56, 0xf8, 0x8e, 0xc5, 0x6a, 0x15, 0xb1, 0x94, 0x22, 0xdf, 0x03, 0xb8, 0xf5, 0x63,
	0xb6, 0x14, 0xfb, 0x6a, 0x88, 0xb5, 0x90, 0x83, 0xdb, 0x0e, 0xe1, 0x49, 0x01, 0x9b, 0x99, 0x4a,
	0xb5, 0x8e, 0x72, 0x3b, 0xb9, 0xdc, 0x2c, 0x05, 0x8a, 0xe3, 0x3c, 0x6b, 0xc5, 0x54, 0xb9, 0x74,
	0xdc, 0xd8, 0x5a, 0x31, 0x0e, 0x2f, 0x7c, 0x2b, 0x74, 0x84, 0xb6, 0x86, 0x80, 0x91, 0x93, 0x69,
	0x2b, 0xe0, 0x42, 0x5b, 0x53, 0x68, 0xcb, 0xe5, 0x72, 0x6d, 0x6f, 0xa0, 0x1d, 0x58, 0xeb, 0x15,
	0xf3, 0xe2, 0xf9, 0x3a, 0x60, 0x6a, 0x6b, 0x4f, 0xda, 0xef, 0x1d, 0x3f, 0xc9, 0x7c, 0x3a, 0x2d,
	0x20, 0x5a, 0x96, 0x23, 0xc7, 0x00, 0x51, 0x6c, 0xc5, 0x49, 0x84, 0xbb, 0x00, 0x77, 0x91, 0x6c,
	0xd7, 0x2c, 0x47, 0x68, 0x49, 0x8a, 0xbc, 0x86, 0xb6, 0x6f, 0xdb, 0x49, 0x60, 0x79, 0xb6, 0xcb,
	0x22, 0xb5, 0x8d, 0xe1, 0xdb, 0xc9, 0xc3, 0x97, 0x42, 0x6b, 0x5a, 0x96, 0x22, 0x1a, 0xd4, 0x43,
	0xdf, 0x5f, 0x45, 0x6a, 0x07, 0xc5, 0x3b, 0x99, 0x38, 0xf5, 0xfd, 0x15, 0x15, 0x10, 0x79, 0x09,
	0xf5, 0x20, 0x74, 0x6d, 0xa6, 0x76, 0xf7, 0xa4, 0xfd, 0xf6, 0x71, 0x37, 0xb7, 0x9e, 0x33, 0xa9,
	0xc0, 0xc8, 0x4f, 0xa0, 0x8d, 0xde, 0x60, 0xfc, 0x0e, 0x91, 0xda, 0xc3, 0xe3, 0x0a, 0x93, 0x73,
	0x88, 0x96, 0xc5, 0xc8, 0x2b, 0x80, 0x28, 0x09, 0xed, 0x5b, 0x2b, 0xbc, 0x61, 0x91, 0xfa, 0x78,
	0xd3, 0xe4, 0x59, 0x86, 0xd0, 0x92, 0x10, 0x79, 0x0d, 0x10, 0x5a, 0x31, 0x33, 0xc3, 0x64, 0xc9,
	0x22, 0x55, 0xd9, 0xab, 0xee, 0xf7, 0x8e, 0x77, 0x73, 0xb3, 0xad, 0x98, 0xd1, 0x64, 0xc9, 0xd0,
	0x39, 0xad, 0x30, 0xa5, 0x22, 0xf2, 0x73, 0xe8, 0xda, 0x96, 0x67, 0xb3, 0xa5, 0x19, 0xf8, 0x4b,
	0xd7, 0x5e, 0xab, 0x3b, 0x78, 0x95, 0x7c, 0x5f, 0x1f, 0xc1, 0x29, 0x62, 0xb4, 0x63, 0x97, 0x28,
	0xa2, 0x42, 0x23, 0x64, 0x3c, 0x15, 0x23, 0x95, 0x60, 0x94, 0x33, 0x92, 0xfc, 0x10, 0x1a, 0x96,
	0xe3, 0x98, 0xbc, 0x56, 0x9e, 0xe0, 0x71, 0x79, 0xad, 0xe8, 0x8e, 0x33, 0xf1, 0x22, 0x2a, 0x5b,
	0xf8, 0x4b, 0x76, 0xa1, 0x1e, 0xfb, 0xef, 0x98, 0xa7, 0xee, 0xe2, 0x01, 0x82, 0x20, 0x3d, 0xa8,
	0xb8, 0x8e, 0xfa, 0x14, 0x59, 0x15, 0xd7, 0xd1, 0x7e, 0x09, 0xad, 0x3c, 0x48, 0x29, 0xc8, 0xeb,
	0xa8, 0xce, 0x41, 0xf2, 0x02, 0xea, 0x81, 0x75, 0xc7, 0x22, 0xb5, 0x82, 0x3e, 0x6a, 0x17, 0x19,
	0x74, 0x47, 0x05, 0xa2, 0x7d, 0x07, 0xaa, 0x53, 0xeb, 0x8e, 0x28, 0x50, 0xb5, 0x6e, 0x44, 0x09,
	0x76, 0x29, 0x5f, 0x6a, 0xef, 0x2b, 0x50, 0xe3, 0xf1, 0x24, 0xfb, 0xa0, 0x64, 0xb1, 0x5f, 0x9b,
	0x21, 0xbb, 0x36, 0x73, 0x15, 0xbd, 0x9c, 0x4f, 0xd9, 0xf5, 0xd0, 0x21, 0x04, 0x6a, 0xa5, 0x2a,
	0xc5, 0x35, 0xd9, 0x83, 0xb6, 0xc3, 0x22, 0x3b, 0x74, 0xb1, 0xe8, 0xd3, 0x22, 0x2d, 0xb3, 0xc8,
	0xf7, 0x01, 0x42, 0x76, 0x9d, 0x78, 0x8e, 0xb5, 0x58, 0x8a, 0x4a, 0x6d, 0xd2, 0x12, 0x87, 0xfb,
	0x21, 0xf1, 0xdc, 0x38, 0xc2, 0xe2, 0xac, 0x52, 0x41, 0x90, 0x2f, 0x00, 0x78, 0x9e, 0x99, 0x22,
	0xc7, 0x64, 0xf4, 0xe4, 0x4e, 0x39, 0x0f, 0x45, 0x9e, 0xb5, 0xc2, 0x6c, 0x49, 0x3e, 0x83, 0xda,
	0x82, 0x39, 0x91, 0xda, 0xd8, 0xf4, 0xc5, 0x09, 0x73, 0x28, 0x02, 0xe4, 0x28, 0xcd, 0x91, 0x60,
	0x69, 0x79, 0x91, 0xda, 0x44, 0x31, 0xa5, 0x9c, 0x23, 0xd3, 0xa5, 0xe5, 0x89, 0xfc, 0xe0, 0x2b,
	0xcc, 0xc3, 0x20, 0xf4, 0x57, 0xbe, 0xe8, 0x7c, 0xad, 0xcd, 0x3c, 0x9c, 0x66, 0x08, 0x2d, 0x09,
	0x69, 0x2e, 0x54, 0x4f, 0x18, 0x7a, 0x2a, 0xe6, 0x35, 0x2a, 0x5a, 0x1e, 0xae, 0xb7, 0x3d, 0x55,
	0xb9, 0xef, 0xa9, 0x5d, 0xa8, 0xdb, 0x7e, 0xe2, 0x89, 0x56, 0x57, 0xa5, 0x82, 0xe0, 0x1d, 0x30,
	0xba, 0xb5, 0x42, 0xe6, 0xa4, 0xbe, 0x4b, 0x29, 0xed, 0x0f, 0xd0, 0xcc, 0x8c, 0xce, 0x23, 0x23,
	0x95, 0x22, 0x43, 0xa0, 0x86, 0xcd, 0x2c, 0x8d, 0x16, 0x5f, 0x93, 0x1f, 0x40, 0x8f, 0x5d, 0x5f,
	0x33, 0x3b, 0x76, 0xbf, 0x65, 0xa6, 0x63, 0xc5, 0x2c, 0x0d, 0x58, 0x37, 0xe7, 0x0e, 0xac, 0x18,
	0xbb, 0x32, 0xbb, 0x0b, 0xdc, 0x30, 0x95, 0x11, 0xdd, 0x15, 0x04, 0x8b, 0x0b, 0x68, 0x7f, 0x84,
	0x56, 0x7e, 0xff, 0xff, 0xb9, 0xf2, 0xbf, 0x49, 0x50, 0x17, 0x21, 0x7f, 0x0e, 0x4d, 0x3b, 0x09,
	0x43, 0xe6, 0xd9, 0xeb, 0x54, 0x7b, 0x4e, 0xf3, 0x0a, 0x5d, 0xb8, 0x9e, 0xe3, 0x7a, 0x37, 0x68,
	0x44, 0x93, 0x66, 0x24, 0xaf, 0x05, 0x2f, 0x9d, 0x27, 0x12, 0xe5, 0x4b, 0xee, 0xf8, 0x9b, 0xd0,
	0x8f, 0x22, 0x54, 0x26, 0x51, 0x41, 0x90, 0x1f, 0x43, 0x93, 0xdd, 0xd9, 0xb7, 0x96, 0x77, 0xc3,
	0x30, 0x37, 0x4b, 0xd9, 0x62, 0xa4, 0x7c, 0x9a, 0x4b, 0xf0, 0x19, 0xc9, 0x1b, 0x40, 0x12, 0x44,
	0xaa, 0xbc, 0x39, 0x23, 0x2f, 0x90, 0x4d, 0x33, 0x58, 0xfb, 0x0a, 0x9a, 0xd9, 0xfe, 0x0f, 0xde,
	0x80, 0x40, 0x8d, 0xe7, 0x22, 0x9a, 0x2f, 0x51, 0x5c, 0x6b, 0xff, 0x90, 0x40, 0x16, 0xe7, 0xfd,
	0x5f, 0x5d, 0x5e, 0x85, 0x06, 0x5f, 0x79, 0x6c, 0x99, 0xce, 0xce, 0x8c, 0xc4, 0x51, 0x82, 0x3d,
	0xb9, 0xb1, 0x35, 0x4a, 0x92, 0x25, 0xa3, 0x02, 0xd2, 0xfe, 0x2c, 0x41, 0x8d, 0xd3, 0xa5, 0xfe,
	0x86, 0xcd, 0xef, 0xc1, 0x2c, 0x3a, 0x4a, 0x4b, 0xab, 0x8a, 0xe3, 0xef, 0x93, 0xf2, 0x79, 0x99,
	0xa7, 0xb3, 0x56, 0x2f, 0xea, 0x6e, 0x17, 0xea, 0xdf, 0x5a, 0xcb, 0x84, 0x65, 0xf7, 0x43, 0x42,
	0xfb, 0x11, 0xf4, 0x36, 0xa5, 0x49, 0x1b, 0x1a, 0x53, 0x83, 0xf6, 0x8d, 0xf1, 0x5c, 0x79, 0x44,
	0x00, 0xe4, 0xe1, 0xc5, 0x74, 0x42, 0xe7, 0x8a, 0xa4, 0xd9, 0xd0, 0xca, 0x1b, 0x4e, 0x31, 0xf6,
	0xa4, 0x0f, 0x8c, 0xbd, 0x57, 0x00, 0x8b, 0x90, 0x59, 0xef, 0x1c, 0xff, 0xf7, 0x5e, 0xd6, 0x9c,
	0xf3, 0xc6, 0x71, 0x92, 0x21, 0xb4, 0x24, 0xa4, 0xdd, 0x41, 0x2b, 0x07, 0x1e, 0xa8, 0x14, 0xe9,
	0x23, 0x2a, 0xa5, 0xb2, 0x5d, 0x29, 0x85, 0xb1, 0xd5, 0x7f, 0x6d, 0xac, 0xf6, 0xa7, 0x1a, 0x40,
	0x31, 0x89, 0x3f, 0xba, 0x9a, 0xff, 0x7d, 0xe3, 0x7f, 0x0d, 0x6d, 0x31, 0x9e, 0x4d, 0x0c, 0x58,
	0x6d, 0xf3, 0xbd, 0xd2, 0x47, 0x48, 0xbc, 0x57, 0xec, 0x7c, 0x4d, 0x3e, 0x85, 0xd6, 0xca, 0xf2,
	0x1c, 0x2b, 0xf6, 0xc3, 0x35, 0x26, 0x5e, 0x93, 0x16, 0x0c, 0x3e, 0xb1, 0x9d, 0x24, 0xb4, 0xf8,
	0xf1, 0xe2, 0x50, 0x19, 0x0f, 0xcd, 0x27, 0xf6, 0x20, 0x05, 0xf1, 0xd8, 0x8e, 0x53, 0xa2, 0x78,
	0xb9, 0xfc, 0x2e, 0xb1, 0xbc, 0xd8, 0x8d, 0xd7, 0xf8, 0x80, 0xab, 0xd2, 0x9c, 0x26, 0x5f, 0x41,
	0x8f, 0x4f, 0x1d, 0x33, 0x76, 0x57, 0xa9, 0xb1, 0xcd, 0xcd, 0x73, 0x2f, 0x3d, 0x37, 0x9e, 0xbb,
	0x2b, 0x61, 0x6e, 0x27, 0x29, 0x51, 0x0f, 0xc4, 0xaa, 0xf5, 0x11, 0xb1, 0x82, 0x7b, 0xb1, 0xfa,
	0x1c, 0xe4, 0x90, 0x45, 0x7e, 0x18, 0xab, 0xed, 0xcd, 0x67, 0x03, 0x45, 0x2e, 0x4d, 0xd1, 0x22,
	0xa6, 0x9d, 0x0f, 0x24, 0xe0, 0xaf, 0xe0, 0x71, 0xf1, 0xa0, 0x12, 0x37, 0xea, 0xe2, 0x8d, 0x9e,
	0xdd, 0x7f, 0x7b, 0xe1, 0x9d, 0x7a, 0xd1, 0x06, 0xad, 0x51, 0x90, 0x85, 0xde, 0xff, 0x5e, 0x3e,
	0x68, 0x7f, 0x95, 0xa0, 0x95, 0xbf, 0xde, 0xb6, 0xb3, 0x43, 0xfa, 0xcf, 0xb3, 0xa3, 0xb2, 0x9d,
	0x1d, 0x1f, 0x93, 0xee, 0xdb, 0x76, 0xd6, 0xee, 0xdb, 0x19, 0x40, 0xa7, 0xfc, 0xf2, 0xdb, 0x7a,
	0xc0, 0x48, 0xf7, 0x1e, 0x30, 0xbf, 0x06, 0x25, 0x7b, 0x46, 0x32, 0xcf, 0x5a, 0xc6, 0x6e, 0xfe,
	0x20, 0x7b, 0xba, 0xf5, 0x92, 0x44, 0x78, 0x4d, 0x1f, 0xdb, 0x25, 0xd2, 0x65, 0x91, 0xf6, 0x17,
	0x09, 0xba, 0x1b, 0x22, 0xe4, 0x05, 0x74, 0x6e, 0xfd, 0x24, 0x8c, 0xcc, 0x05, 0xbb, 0xf6, 0x43,
	0xa1, 0xb5, 0x4a, 0xdb, 0xc8, 0x3b, 0x41, 0x16, 0xf9, 0x05, 0x74, 0x84, 0xbe, 0xb5, 0xf0, 0x60,
	0x05, 0x3d, 0xf8, 0xdd, 0x07, 0x55, 0xa6, 0xdf, 0x12, 0x05, 0xb1, 0x31, 0x3d, 0xaa, 0x5b, 0xd3,
	0xe3, 0xe1, 0x8e, 0xf9, 0x5b, 0x90, 0xc5, 0x0b, 0x96, 0xbc, 0x82, 0x8e, 0xe3, 0x46, 0x71, 0xe8,
	0x2e, 0x12, 0xf4, 0xa1, 0xf8, 0x26, 0xec, 0x6e, 0xbc, 0x73, 0xe9, 0x86, 0x08, 0xf7, 0x61, 0x4e,
	0xe7, 0x9d, 0xaa, 0xe0, 0x68, 0x47, 0x50, 0xc7, 0x6d, 0x7c, 0x3e, 0xbd, 0x63, 0xd9, 0x40, 0xe3,
	0xcb, 0xc2, 0x1a, 0xb1, 0x4b, 0x10, 0x07, 0x23, 0x68, 0x97, 0xbe, 0x93, 0x48, 0x07, 0x9a, 0x17,
	0x06, 0xed, 0x9f, 0xe9, 0x59, 0xf7, 0x1e, 0x0c, 0xa9, 0xd1, 0x9f, 0x2b, 0x12, 0x51, 0xa0, 0xd3,
	0xd7, 0xe9, 0xc0, 0x3c, 0x99, 0x4c, 0xce, 0x87, 0xe3, 0x53, 0xa5, 0x42, 0x76, 0xa0, 0x8b, 0x9c,
	0xfe, 0x99, 0xd1, 0x3f, 0x37, 0x87, 0x63, 0xa5, 0x7a, 0xf0, 0x29, 0x40, 0xf1, 0xfd, 0x44, 0x64,
	0xa8, 0x4c, 0xce, 0x95, 0x47, 0xfc, 0x97, 0x7e, 0xad, 0x48, 0x07, 0xef, 0x25, 0xe8, 0x94, 0xbf,
	0x21, 0x70, 0x54, 0xe8, 0xfd, 0x73, 0xfd, 0xd4, 0x50, 0x1e, 0x71, 0x62, 0x32, 0x1a, 0x18, 0xf4,
	0xcd, 0x1b, 0x45, 0xca, 0x89, 0x9f, 0x7e, 0xa1, 0x54, 0x0a, 0xe2, 0x8d, 0x52, 0x25, 0x4f, 0xe0,
	0x71, 0x5f, 0x1f, 0xeb, 0xf4, 0xca, 0xa4, 0xc6, 0x6c, 0x38, 0xe0, 0x63, 0xa6, 0x46, 0x9e, 0xc2,
	0xce, 0x89, 0x3e, 0x32, 0x74, 0x3a, 0xec, 0x17, 0xec, 0x3a, 0xb7, 0x79, 0xa4, 0xd3, 0x53, 0xc3,
	0x7c, 0xab, 0x5f, 0x0c, 0x47, 0x57, 0x8a, 0x4c, 0xba, 0xd0, 0x3a, 0x9b, 0x8c, 0x8d, 0xab, 0x8b,
	0xc9, 0x64, 0xac, 0x34, 0x08, 0x81, 0xde, 0xf4, 0xf2, 0x64, 0x34, 0xec, 0x9b, 0x33, 0x83, 0x7e,
	0xc3, 0x2f, 0xdd, 0x24, 0x3d, 0x80, 0xcb, 0xb1, 0x71, 0x31, 0x1d, 0x4d, 0xae, 0x8c, 0x81, 0xd2,
	0xe2, 0x4e, 0x18, 0x4f, 0xe8, 0x85, 0x3e, 0x52, 0x80, 0xcb, 0x8f, 0x27, 0x63, 0x93, 0x1a, 0x6f,
	0x2f, 0xc7, 0x03, 0xfd, 0x64, 0x64, 0x28, 0xed, 0x83, 0x3b, 0xe8, 0x6d, 0x36, 0x01, 0xee, 0xc4,
	0xd9, 0xf9, 0xd0, 0x9c, 0xea, 0xb3, 0x99, 0xb8, 0xd7, 0xc8, 0x98, 0xcd, 0x26, 0xe3, 0x99, 0x22,
	0x91, 0x16, 0xd4, 0x2f, 0x0c, 0x7d, 0x34, 0x53, 0x2a, 0xdc, 0x14, 0xe3, 0xeb, 0xcb, 0xe1, 0xf4,
	0x82, 0xdb, 0x5a, 0xe5, 0x6a, 0xe6, 0xc3, 0xfe, 0xb9, 0xc1, 0xaf, 0xd3, 0x85, 0xd6, 0x9c, 0xea,
	0xe3, 0xd9, 0x5b, 0x83, 0xce, 0x94, 0x3a, 0x69, 0x42, 0xed, 0x54, 0x1f, 0xe9, 0x8a, 0xcc, 0x4f,
	0xd6, 0xfb, 0xf3, 0xe1, 0x37, 0xc3, 0xf9, 0x95, 0xd2, 0x38, 0xf8, 0x1c, 0xa0, 0xa8, 0x6f, 0xae,
	0x67, 0x38, 0xee, 0x8f, 0x2e, 0x07, 0xa9, 0x33, 0x8d, 0xdf, 0x08, 0x42, 0x3a, 0x78, 0x09, 0x9d,
	0x72, 0x43, 0xe7, 0x46, 0x50, 0x7d, 0x8c, 0x4e, 0x6f, 0x42, 0x6d, 0x32, 0x35, 0xc6, 0x8a, 0x74,
	0xf0, 0x02, 0x3a, 0xe5, 0xee, 0x4c, 0x1a, 0x50, 0x1d, 0xe8, 0x57, 0x42, 0xe4, 0x6c, 0x72, 0x49,
	0x15, 0xe9, 0xe0, 0x67, 0xb0, 0x73, 0xaf, 0x1a, 0xd0, 0x3d, 0xc3, 0xd3, 0xb3, 0x79, 0x7a, 0xd5,
	0x6c, 0xf4, 0x4b, 0xa5, 0xd1, 0x5f, 0x39, 0xee, 0x43, 0x53, 0xfc, 0x0f, 0xc2, 0x42, 0xf2, 0x25,
	0xc8, 0x62, 0x4d, 0x9e, 0x1d, 0x8a, 0xff, 0x4e, 0x0e, 0xb3, 0xff, 0x4e, 0x0e, 0x8d, 0x55, 0x10,
	0xaf, 0x9f, 0xe7, 0x5f, 0xf0, 0xa5, 0xff, 0x4e, 0xb4, 0x47, 0x0b, 0x19, 0xc5, 0x5e, 0xff, 0x33,
	0x00, 0x00, 0xff, 0xff, 0x32, 0xe7, 0xcc, 0x84, 0x88, 0x11, 0x00, 0x00,
}
